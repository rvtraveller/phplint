BEGIN parsing of 5-spl-ArrayAccess.php
1:	<?php
2:	
3:	/*.
4:		require_module 'spl';
5:	.*/
6:	
7:	class TestArrayAccess
8:	implements ArrayAccess
9:	{
10:		private $a = array("zero", "one", "two");
11:	
12:	
13:		/*. bool  .*/ function offsetExists(/*. mixed .*/ $offset)
14:		{
15:			if( ! is_int($offset) )
16:				return FALSE;
17:			$k = (int) $offset;
18:			return $k >= 0 && $k < count($this->a);
19:		}
20:	
21:	
22:		/*. string .*/ function offsetGet(/*. mixed .*/ $offset)
23:		{
24:			if( ! is_int($offset) )
25:				throw new InvalidArgumentException("offset must be int");
26:			$k = (int) $offset;
27:			if( $k < 0 || $k >= count($this->a) )
28:				throw new OutOfRangeException("offset = $k");
29:			return $this->a[$k];
30:		}
31:	
32:	
33:		/*. void  .*/ function offsetSet(/*. mixed .*/ $offset,
34:			/*. string .*/ $value)
35:		{
36:			die("unimplemented");
37:		}
38:	
39:	
40:		/*. void  .*/ function offsetUnset(/*. mixed .*/ $offset)

			/*. string .*/ $value)
	                                     \_ HERE
==== 34: notice: variable $value assigned but never used

		/*. void  .*/ function offsetSet(/*. mixed .*/ $offset,
	                                                              \_ HERE
==== 33: notice: variable $offset assigned but never used

		/*. void  .*/ function offsetSet(/*. mixed .*/ $offset,
	                                        \_ HERE
==== 33: ERROR: method TestArrayAccess::offsetSet with prototype
	public void(mixed, string)
	is not call-compatible with ArrayAccess::offsetSet with prototype
	public void(mixed, mixed)
	(argument no. 2 is not call-compatible)
41:		{
42:			die("unimplemented");
43:		}
44:	
45:	}

		/*. void  .*/ function offsetUnset(/*. mixed .*/ $offset)
	                                                                \_ HERE
==== 40: notice: variable $offset assigned but never used
46:	
47:	
48:	$x = new TestArrayAccess();
49:	if($x[0]); // check type

	if($x[0]); // check type
	         \_ HERE
==== 49: ERROR: found expression of type string, expected type is boolean. Remember that the empty string "", the string "0" and the NULL string all evaluate to FALSE and any other string evaluates to TRUE.
50:	for( $i = 0; $x->offsetExists($i); $i++ )
51:		echo $x[$i], "\n";
52:	
53:	
54:	
55:	$test = new SplFixedArray(4);
56:	$test[4] = 'test';
57:	echo (string) $test[1];
END parsing of 5-spl-ArrayAccess.php
==== ?:?: notice: required module core.php
==== ?:?: notice: required module file.php
==== ?:?: notice: required module spl.php
Overall test results: 2 errors, 0 warnings.
