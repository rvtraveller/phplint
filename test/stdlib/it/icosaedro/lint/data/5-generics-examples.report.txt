BEGIN parsing of 5-generics-examples.php
1:	<?php
2:	
3:	// EXAMPLES FOR THE TEMPLATE.HTM REFERENCE MANUAL
4:	// ==============================================
5:	
6:	require_once __DIR__ . "/../../../../../../stdlib/all.php";
7:	
8:	/**
9:	 * An instance of this class stores an object of type T.
10:	 */
11:	class Box /*. <T> .*/ {
12:	
13:		/**
14:		 * Stored object.
15:		 * @var T
16:		 */
17:		private $v;
18:	
19:		/**
20:		 * Stores the given object.
21:		 * @param T $v Object to store.
22:		 */
23:		function __construct(/*. T .*/ $v){ $this->v = $v; }
24:	
25:		/**
26:		 * Replaces the currently stored object.
27:		 * @param T $v Replacement object.
28:		 */
29:		function set($v){ $this->v = $v; }
30:	
31:		/**
32:		 * Returns the currently stored object.
33:		 * @return T The stored object.
34:		 */
35:		function get(){ return $this->v; }
36:	}
37:	
38:	# Two classes to be used in our examples:
39:	class A { public $aNumber = 123; }
40:	class B { public $aString = "hello"; }
41:	
42:	# We create specific objects and arrays out of the generic Box class:
43:	$a = new Box/*. <A> .*/(new A());
44:	$b = new Box/*. <B> .*/(new B());
45:	$manyBoxedA = /*. (Box<A>[int]) .*/ array();
46:	
47:	# PHPLint is aware of the real nature of the these variables:
48:	echo "The number is ", $a->get()->aNumber;
49:	echo "The string is ", $b->get()->aString;
50:	$manyBoxedA[0] = new Box/*. <A> .*/(new A());
51:	
52:	//---------------------------------------------------------------------------
53:	
54:	class Pair2 /*. <First,Second> .*/ {
55:	
56:		private /*. First .*/ $first;
57:		private /*. Second .*/ $second;
58:	
59:		/*. void .*/ function __construct(/*. First .*/ $first, /*. Second .*/ $second) {
60:			$this->first = $first;
61:			$this->second = $second;
62:		}
63:	
64:		/*. First  .*/ function getFirst()  { return $this->first;   }
65:		/*. Second .*/ function getSecond() { return $this->second; }
66:	}
67:	
68:	$p = new Pair2/*. <A,B> .*/(new A(), new B());
69:	echo "The number is ", $p->getFirst()->aNumber;
70:	echo "The string is ", $p->getSecond()->aString;
71:	
72:	//---------------------------------------------------------------------------
73:	
74:	
75:	/*.
76:		require_module 'core';
77:		require_module 'spl';
78:		require_module 'array';
79:	.*/
80:	
81:	use it\icosaedro\containers\Sortable;
82:	use it\icosaedro\containers\Printable;
83:	
84:	class SortedList /*. <E extends Sortable> .*/ implements Countable {
85:	
86:		private /*. E[int] .*/ $elements = array();
87:	
88:		public  /*. int .*/ function count(){ return count($this->elements); }
89:	
90:		public  /*. void .*/ function put(/*. E .*/ $e){
91:			// Bisection method.
92:			$l = 0;
93:			$r = count($this->elements);
94:			do {
95:				if( $l == $r ){
96:					// Insert at offset $l:
97:					array_splice($this->elements, $l, 0, array($e));
98:					return;
99:				}
100:				$m = (int) (($l + $r)/2);
101:				# Here is where we need to know that E implements Sortable:
102:				$cmp = $e->compareTo($this->elements[$m]);
103:				if( $cmp < 0 )
104:					$r = $m;
105:				else if( $cmp > 0 )
106:					$l = $m+1;
107:				else
108:					$l = $r = $m;
109:			} while(TRUE);
110:		}
111:	
112:		public /*. E .*/ function get(/*. int .*/ $i){ return $this->elements[$i]; }
113:	
114:		public /*. E[int] .*/ function getArray(){ return $this->elements; }
115:	}
116:	
117:	require_once SRC_BASE_DIR . "/utf8.php"; // handy u() function
118:	use it\icosaedro\containers\Arrays;
119:	use it\icosaedro\utils\Date;
120:	use it\icosaedro\utils\UString;
121:	
122:	# Ordered list of dates:
123:	$holidays = new SortedList/*. <Date> .*/();
124:	$holidays->put(new Date(2015, 12, 8) );
125:	$holidays->put(new Date(2016, 1, 1) );
126:	$holidays->put(new Date(2016, 1, 6) );
127:	echo "Holidays: ", Arrays::implode($holidays->getArray(), ", "), "\n";
128:	
129:	# Ordered list of Unicode strings:
130:	$countries = new SortedList/*. <UString> .*/();
131:	$countries->put(u("Ireland"));
132:	$countries->put(u("Denmark"));
133:	$countries->put(u("Poland"));
134:	$countries->put(u("Austria"));
135:	$countries->put(u("Italy"));
136:	$countries->put(u("France"));
137:	$countries->put(u("United Kingdom"));
138:	$countries->put(u("Germany"));
139:	$countries->put(u("Portugal"));
140:	$countries->put(u("Spain"));
141:	$countries->put(u("Greece"));
142:	$countries->put(u("Norway"));
143:	$countries->put(u("Sweden"));
144:	$countries->put(u("Finland"));
145:	echo "Countries:\n", Arrays::implode($countries->getArray(), "\n"), "\n";
146:	
147:	//---------------------------------------------------------------------------
148:	
149:	
150:	// inheritance test:
151:	class BoxA extends Box/*.<A>.*/ {}
152:	
153:	function randomTestsNotToBeExecuted()
154:	{
155:		/*. BoxA .*/ $x = new Box/*.<A>.*/(new A()); // ERR: Box<A> is not BoxA

		/*. BoxA .*/ $x = new Box/*.<A>.*/(new A()); // ERR: Box<A> is not BoxA
	                                                    \_ HERE
==== 155: ERROR: cannot assign Box<A> to $x of type BoxA
156:		/*. Box<A> .*/ $y = new BoxA(new A()); // ok
157:	
158:		$sl3 = new SortedList(); // creates SortedList<? extends Sortable>
159:		$sl3->put(Date::today()); // ERR: Date is not ? extends Sortable

		$sl3->put(Date::today()); // ERR: Date is not ? extends Sortable
	                                \_ HERE
==== 159: ERROR: calling SortedList<? extends it\icosaedro\containers\Sortable>::put declared in line 90, argument no. 1: found type it\icosaedro\utils\Date is not assignment compatible with $e of type ? extends it\icosaedro\containers\Sortable
160:		$sl3->put(new A()); // ERR: A is not ? extends Sortable

		$sl3->put(new A()); // ERR: A is not ? extends Sortable
	                          \_ HERE
==== 160: ERROR: calling SortedList<? extends it\icosaedro\containers\Sortable>::put declared in line 90, argument no. 1: found type A is not assignment compatible with $e of type ? extends it\icosaedro\containers\Sortable
161:		/*. Sortable .*/ $aSortable3 = $sl3->get(0); // ok
162:	
163:		$sl4 = new SortedList/*.<Sortable>.*/();
164:		$sl4->put(Date::today()); // ok
165:		$sl4->put(new A()); // ERR: A is not Sortable

		$sl4->put(new A()); // ERR: A is not Sortable
	                          \_ HERE
==== 165: ERROR: calling SortedList<it\icosaedro\containers\Sortable>::put declared in line 90, argument no. 1: found type A is not assignment compatible with $e of type it\icosaedro\containers\Sortable
166:		/*. Sortable .*/ $aSortable4 = $sl4->get(0); // ok
167:	}
168:	
169:	//---------------------------------------------------------------------------
170:	// The it\icosaedro\containers namespace contains some generic classes and the
171:	// corresponding tests are examples of concrete applications it worths to check:
172:	
173:	require_once __DIR__ . "/../../containers/test-GenericArray.php";

		/*. Sortable .*/ $aSortable4 = $sl4->get(0); // ok
	                                    \_ HERE
==== 166: notice: variable $aSortable4 assigned but never used

		/*. Sortable .*/ $aSortable3 = $sl3->get(0); // ok
	                                    \_ HERE
==== 161: notice: variable $aSortable3 assigned but never used

		/*. Box<A> .*/ $y = new BoxA(new A()); // ok
	                         \_ HERE
==== 156: notice: variable $y assigned but never used

		/*. BoxA .*/ $x = new Box/*.<A>.*/(new A()); // ERR: Box<A> is not BoxA
	                       \_ HERE
==== 155: notice: variable $x assigned but never used
174:	require_once __DIR__ . "/../../containers/test-GenericHashSet.php";

	function main()
	             \_ HERE
==== ../../containers/test-GenericHashSet.php:87: ERROR: function main already declared in ../../containers/test-GenericArray.php:87
175:	require_once __DIR__ . "/../../containers/test-GenericHashMap.php";

	function testWithRandomNums()
	                           \_ HERE
==== ../../containers/test-GenericHashMap.php:117: ERROR: function testWithRandomNums already declared in ../../containers/test-GenericHashSet.php:68

	function main() {
	             \_ HERE
==== ../../containers/test-GenericHashMap.php:142: ERROR: function main already declared in ../../containers/test-GenericHashSet.php:87

	use it\icosaedro\containers\Printable;
	                                      \_ HERE
==== 82: notice: unused clause `use it\icosaedro\containers\Printable as Printable'
END parsing of 5-generics-examples.php
==== ?:?: notice: unused package ../../../../../../stdlib/all.php
==== ?:?: notice: unused package ../../../../../../stdlib/errors.php
==== ?:?: notice: unused package ../../containers/test-GenericArray.php
==== ?:?: notice: unused package ../../containers/test-GenericHashMap.php
==== ?:?: notice: unused package ../../containers/test-GenericHashSet.php
==== ?:?: notice: required module array.php
==== ?:?: notice: required module core.php
==== ?:?: notice: required module file.php
==== ?:?: notice: required module math.php
==== ?:?: notice: required module pcre.php
==== ?:?: notice: required module phpinfo.php
==== ?:?: notice: required module spl.php
==== ?:?: notice: required package ../../../../../../stdlib/AutoloadException.php
==== ?:?: notice: required package ../../../../../../stdlib/CastException.php
==== ?:?: notice: required package ../../../../../../stdlib/InternalException.php
==== ?:?: notice: required package ../../../../../../stdlib/autoload.php
==== ?:?: notice: required package ../../../../../../stdlib/cast.php
==== ?:?: notice: required package ../../../../../../stdlib/it/icosaedro/containers/Arrays.php
==== ?:?: notice: required package ../../../../../../stdlib/it/icosaedro/containers/Comparable.php
==== ?:?: notice: required package ../../../../../../stdlib/it/icosaedro/containers/Equality.php
==== ?:?: notice: required package ../../../../../../stdlib/it/icosaedro/containers/GenericArray.php
==== ?:?: notice: required package ../../../../../../stdlib/it/icosaedro/containers/GenericHashMap.php
==== ?:?: notice: required package ../../../../../../stdlib/it/icosaedro/containers/GenericHashSet.php
==== ?:?: notice: required package ../../../../../../stdlib/it/icosaedro/containers/GenericIterator.php
==== ?:?: notice: required package ../../../../../../stdlib/it/icosaedro/containers/GenericSorter.php
==== ?:?: notice: required package ../../../../../../stdlib/it/icosaedro/containers/Hash.php
==== ?:?: notice: required package ../../../../../../stdlib/it/icosaedro/containers/Hashable.php
==== ?:?: notice: required package ../../../../../../stdlib/it/icosaedro/containers/IntClass.php
==== ?:?: notice: required package ../../../../../../stdlib/it/icosaedro/containers/Pair.php
==== ?:?: notice: required package ../../../../../../stdlib/it/icosaedro/containers/Printable.php
==== ?:?: notice: required package ../../../../../../stdlib/it/icosaedro/containers/Sortable.php
==== ?:?: notice: required package ../../../../../../stdlib/it/icosaedro/containers/Sorter.php
==== ?:?: notice: required package ../../../../../../stdlib/it/icosaedro/containers/StringClass.php
==== ?:?: notice: required package ../../../../../../stdlib/it/icosaedro/containers/StringSorter.php
==== ?:?: notice: required package ../../../../../../stdlib/it/icosaedro/containers/UPrintable.php
==== ?:?: notice: required package ../../../../../../stdlib/it/icosaedro/phplint/ArrayBothType.php
==== ?:?: notice: required package ../../../../../../stdlib/it/icosaedro/phplint/ArrayIntType.php
==== ?:?: notice: required package ../../../../../../stdlib/it/icosaedro/phplint/ArrayStringType.php
==== ?:?: notice: required package ../../../../../../stdlib/it/icosaedro/phplint/BooleanType.php
==== ?:?: notice: required package ../../../../../../stdlib/it/icosaedro/phplint/ClassType.php
==== ?:?: notice: required package ../../../../../../stdlib/it/icosaedro/phplint/FloatType.php
==== ?:?: notice: required package ../../../../../../stdlib/it/icosaedro/phplint/IntType.php
==== ?:?: notice: required package ../../../../../../stdlib/it/icosaedro/phplint/MixedType.php
==== ?:?: notice: required package ../../../../../../stdlib/it/icosaedro/phplint/NullType.php
==== ?:?: notice: required package ../../../../../../stdlib/it/icosaedro/phplint/ObjectType.php
==== ?:?: notice: required package ../../../../../../stdlib/it/icosaedro/phplint/ResourceType.php
==== ?:?: notice: required package ../../../../../../stdlib/it/icosaedro/phplint/StringType.php
==== ?:?: notice: required package ../../../../../../stdlib/it/icosaedro/phplint/TypeInterface.php
==== ?:?: notice: required package ../../../../../../stdlib/it/icosaedro/phplint/Types.php
==== ?:?: notice: required package ../../../../../../stdlib/it/icosaedro/utils/Codepoints.php
==== ?:?: notice: required package ../../../../../../stdlib/it/icosaedro/utils/Date.php
==== ?:?: notice: required package ../../../../../../stdlib/it/icosaedro/utils/Floats.php
==== ?:?: notice: required package ../../../../../../stdlib/it/icosaedro/utils/Integers.php
==== ?:?: notice: required package ../../../../../../stdlib/it/icosaedro/utils/Strings.php
==== ?:?: notice: required package ../../../../../../stdlib/it/icosaedro/utils/TestUnit.php
==== ?:?: notice: required package ../../../../../../stdlib/it/icosaedro/utils/Timer.php
==== ?:?: notice: required package ../../../../../../stdlib/it/icosaedro/utils/UString.php
==== ?:?: notice: required package ../../../../../../stdlib/it/icosaedro/utils/UTF8.php
==== ?:?: notice: required package ../../../../../../stdlib/utf8.php
Overall test results: 7 errors, 0 warnings.
